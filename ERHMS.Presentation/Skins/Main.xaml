<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:bing="clr-namespace:Microsoft.Maps.MapControl.WPF;assembly=Microsoft.Maps.MapControl.WPF"
                    xmlns:conv="clr-namespace:ERHMS.Presentation.Converters"
                    xmlns:ctrl="clr-namespace:ERHMS.Presentation.Controls"
                    xmlns:dock="http://schemas.xceed.com/wpf/xaml/avalondock"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:scw="clr-namespace:MahApps.Metro.SimpleChildWindow;assembly=MahApps.Metro.SimpleChildWindow"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Xceed.Wpf.AvalonDock;component/Themes/generic.xaml" />
        <ResourceDictionary Source="../Resources/Icons.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="AccentButton" TargetType="{x:Type Button}" BasedOn="{StaticResource AccentedSquareButtonStyle}">
        <Setter Property="mah:ButtonHelper.PreserveTextCase" Value="True" />
    </Style>

    <Style x:Key="AppBar" TargetType="{x:Type WrapPanel}">
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <Style TargetType="{x:Type ctrl:AppBarButton}" BasedOn="{StaticResource MetroButton}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel>
                        <Rectangle Width="25" Height="20" Fill="{StaticResource BlackBrush}">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Uniform"
                                             Visual="{Binding Visual, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ctrl:AppBarButton}}}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                        <ContentPresenter HorizontalAlignment="Center" Margin="0" TextBlock.FontSize="12"
                                          Content="{Binding Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ctrl:AppBarButton}}}" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="50" />
        <Setter Property="Margin" Value="0,0,5,5" />
        <Setter Property="MinWidth" Value="50" />
    </Style>

    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource MetroCheckBox}">
        <Setter Property="Margin" Value="0,0,0,5" />
    </Style>

    <Style TargetType="{x:Type scw:ChildWindow}">
        <Style.Resources>
            <Style TargetType="{x:Type DockPanel}">
                <Setter Property="Margin" Value="1,5,1,-4" />
            </Style>
        </Style.Resources>
        <Setter Property="ChildWindowWidth" Value="500" />
    </Style>

    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MetroComboBox}">
        <Setter Property="Margin" Value="0,0,0,5" />
    </Style>

    <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource MetroDataGrid}">
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="BorderBrush" Value="{StaticResource GrayBrush5}" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="Margin" Value="0,0,0,5" />
    </Style>

    <Style TargetType="{x:Type DatePicker}" BasedOn="{StaticResource MetroDatePicker}">
        <Setter Property="Margin" Value="0,0,0,5" />
    </Style>

    <Style TargetType="{x:Type dock:DockingManager}">
        <Setter Property="DocumentHeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock FontSize="18" Margin="5,0,0,0" MaxWidth="200" TextTrimming="CharacterEllipsis" Text="{Binding Title}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DocumentPaneControlStyle">
            <Setter.Value>
                <Style TargetType="{x:Type dock:LayoutDocumentPaneControl}" BasedOn="{StaticResource DocumentPaneControlStyle}">
                    <Setter Property="Background" Value="White" />
                    <Setter Property="Margin" Value="5,4,5,5" />
                    <Setter Property="Padding" Value="5,5,5,0" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="LayoutItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type dock:LayoutItem}">
                    <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />
                    <Setter Property="Title" Value="{Binding Model.Title}" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MetroGroupBox}">
        <Style.Resources>
            <conv:StringToUppercaseStringConverter x:Key="StringToUppercaseStringConverter" />
        </Style.Resources>
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Padding="0,0,0,5"
                               Text="{Binding Header, RelativeSource={RelativeSource AncestorType={x:Type GroupBox}}, Converter={StaticResource StringToUppercaseStringConverter}}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0,0,0,5" />
        <Setter Property="Padding" Value="5,5,5,0" />
    </Style>

    <sys:Double x:Key="LargerFontSize">16.0</sys:Double>

    <Style x:Key="IncidentNoteList" TargetType="{x:Type ItemsControl}">
        <Style.Resources>
            <conv:DateTimeToStringConverter x:Key="DateTimeToStringConverter" />
        </Style.Resources>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border BorderBrush="{StaticResource GrayBrush6}" BorderThickness="0,1,0,0">
                        <StackPanel Margin="5">
                            <TextBlock Margin="0,0,0,5" TextWrapping="Wrap" Text="{Binding Content}" />
                            <TextBlock Foreground="{StaticResource GrayNormalBrush}"
                                       Text="{Binding Date, Converter={StaticResource DateTimeToStringConverter}}" />
                        </StackPanel>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Label}" BasedOn="{StaticResource MetroLabel}">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Margin" Value="0,0,0,5" />
    </Style>

    <Style TargetType="{x:Type bing:Map}">
        <Setter Property="Margin" Value="0,0,0,5" />
    </Style>

    <Style TargetType="{x:Type mah:MetroTabControl}">
        <Setter Property="TabStripMargin" Value="0,0,5,0" />
        <Setter Property="TabStripPlacement" Value="Left" />
    </Style>

    <Style TargetType="{x:Type mah:MetroTabItem}">
        <Setter Property="mah:ControlsHelper.HeaderFontSize" Value="18" />
    </Style>

    <Style x:Key="MultiLineTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MetroTextBox}">
        <Setter Property="AcceptsReturn" Value="True" />
        <Setter Property="Height" Value="100" />
        <Setter Property="Margin" Value="0,0,0,5" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style TargetType="{x:Type ctrl:MultiSelectDataGrid}" BasedOn="{StaticResource {x:Type DataGrid}}" />

    <Style x:Key="Numeric" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource MetroDataGridCell}">
        <Setter Property="HorizontalContentAlignment" Value="Right" />
    </Style>

    <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource MetroRadioButton}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl FlowDirection="LeftToRight" Content="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FlowDirection" Value="RightToLeft" />
        <Setter Property="Margin" Value="0,0,5,5" />
    </Style>

    <Style TargetType="{x:Type ctrl:RemovableItemsControl}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel MinHeight="31" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border BorderThickness="1" Margin="0,0,5,5" MinHeight="26" SnapsToDevicePixels="True">
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.BorderBrush" Value="{StaticResource GrayBrush6}" />
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.BorderBrush" Value="{StaticResource GrayBrush2}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <StackPanel Margin="3" Orientation="Horizontal">
                            <ContentPresenter ContentTemplate="{Binding ItemTextTemplate, RelativeSource={RelativeSource AncestorType={x:Type ctrl:RemovableItemsControl}}}" />
                            <Button Margin="3,0,0,0" Style="{StaticResource ChromelessButtonStyle}" Command="{Binding RemoveCommand}">
                                <Rectangle Width="8" Height="8" Fill="{StaticResource BlackBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform" Visual="{DynamicResource appbar_close}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </Button>
                        </StackPanel>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource MetroScrollViewer}">
        <Setter Property="Margin" Value="0,0,0,5" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
    </Style>

    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MetroTextBox}">
        <Setter Property="Margin" Value="0,0,0,5" />
    </Style>
</ResourceDictionary>
